sexo <- c(rep("Niñas", 9), rep("Niños", 11))
transtorno <- c(rep("Si", 3), rep("No", 10))
datos <- data.frame(sexo, transtorno)
tabla <- xtabs(~., datos)
print(tabla)
sexo <- c(rep("Niñas", 9), rep("Niños", 11))
transtorno <- c(rep("Si", 3), rep("No", 10))
datos <- data.frame(transtorno, sexo)
tabla <- xtabs(~., datos)
print(tabla)
sexo <- c(rep("Niñas", 9), rep("Niños", 11))
transtorno <- c(rep("Si", 3), rep("No", 10))
datos <- data.frame(transtorno, sexo)
tabla <- xtabs(~., datos)
sexo <- c(rep("Niñas", 9), rep("Niños", 11))
transtorno <- c(rep("Si", 3), rep("No", 10))
sexo
transtorno
sexo <- c(rep("Niñas", 9), rep("Niños", 11))
transtorno <- c(rep("Si", 13), rep("No", 7))
datos <- data.frame(transtorno, sexo)
tabla <- xtabs(~., datos)
print(tabla)
tipo<- c(rep("descarga_dolorosa",17), rep("descarga_suave",13))
compania <- c(rep("sola",14),rep("acompanada",16))
datos <- data.frame(compania,tipo)
tabla <- xtabs(~.,datos)
print(tabla)
tipo<- c(rep("descarga_dolorosa",17), rep("descarga_suave",13))
compania <- c(rep("sola",14),rep("acompanada",16))
datos <- data.frame(compania,tipo)
tabla <- xtabs(~.,datos)
print(tabla)
tipo<- c(rep("descarga_dolorosa",17), rep("descarga_suave",13))
compania <- c(rep("sola",14),rep("acompanada",16))
datos <- data.frame(compania,tipo)
tabla <- xtabs(~.,datos)
print(tabla)
tipo<- c(rep("descarga_dolorosa",17), rep("descarga_suave",13))
compania <- c(rep("sola",14),rep("acompanada",16))
datos <- data.frame(compania,tipo)
tabla <- xtabs(~.,datos)
print(tabla)
sexo <- c(rep("Niñas", 9), rep("Niños", 11))
transtorno <- c(rep("Si", 13), rep("No", 7))
datos <- data.frame(transtorno, sexo)
tabla <- xtabs(~., datos)
print(tabla)
tipo<- c(rep("descarga_dolorosa",17), rep("descarga_suave",13))
compania <- c(rep("sola",14),rep("acompanada",16))
datos <- data.frame(compania,tipo)
tabla <- xtabs(~.,datos)
print(tabla)
# Crear tabla de contingencia:
sexo <- c(rep("Niñas", 9), rep("Niños", 11))
transtorno <- c(rep("Si", 13), rep("No", 7))
datos <- data.frame(transtorno, sexo)
tabla <- xtabs(~., datos)
print(tabla)
tipo<- c(rep("descarga_dolorosa",17), rep("descarga_suave",13))
compania <- c(rep("sola",14),rep("acompanada",16))
datos <- data.frame(compania,tipo)
tabla <- xtabs(~.,datos)
print(tabla)
tipo
sexo <- c(rep("Niñas", 9), rep("Niños", 11))
transtorno <- c(rep("Si", 13), rep("No", 7))
datos <- data.frame(transtorno, sexo)
tabla <- xtabs(~., datos)
print(tabla)
alfa <- 0.05
# Se aplica la prueba de Fisher
prueba <- fisher.test(tabla, 1-alfa)
print(prueba)
vampiros <- seq(1:13)
limpia <- c(rep("sano",3), rep("enfermo",2), rep("enfermo",2), rep("sano",6))
vacuna <- c(rep("sano",3), rep("enfermo",2), rep("sano",2), rep("enfermo",6))
tabla2 <- table(medicamento, placebo)
print(tabla2)
# Nivel de significacion
alfa <- 0.05
#Se aplica la prueba
prueba <- mcnemar.test(tabla2)
print(prueba2)
prueba2 <- mcnemar.test(tabla2)
print(prueba2)
prueba2 <- mcnemar.test(tabla2)
print(prueba2)
vampiros <- seq(1:13)
limpia <- c(rep("sano",3), rep("enfermo",2), rep("enfermo",2), rep("sano",6))
vacuna <- c(rep("sano",3), rep("enfermo",2), rep("sano",2), rep("enfermo",6))
tabla2 <- table(medicamento, placebo)
print(tabla2)
# Nivel de significacion
alfa <- 0.05
#Se aplica la prueba
prueba2 <- mcnemar.test(tabla2)
print(prueba2)
vampiros <- seq(1:13)
limpia <- c(rep("sano",3), rep("enfermo",2), rep("enfermo",2), rep("sano",6))
vacuna <- c(rep("sano",3), rep("enfermo",2), rep("sano",2), rep("enfermo",6))
tabla2 <- table(vacuna, limpia)
print(tabla2)
prueba2 <- mcnemar.test(tabla2)
print(prueba2)
print(tabla)
vampiros <- seq(1:13)
limpia <- c(rep("sano",3), rep("enfermo",2), rep("enfermo",2), rep("sano",6))
vacuna <- c(rep("sano",3), rep("enfermo",2), rep("sano",2), rep("enfermo",6))
tabla2 <- table(vacuna, limpia)
print(tabla2)
limpia
estudiantes <- c(208, 7, 2)
nacional <- c(5046, 3421, 706)
tabla3 <- as.table(rbind(estudiantes, nacional))
dimnames(tabla3) <- list(poblacion = c("Estudiante", "Nacional"),
aprobacion = c("Aprueba", "Desaprueba", "Ninguna"))
print(tabla3)
estudiantes <- c(208, 7, 2)
nacional <- c(5046, 3421, 706)
tabla3 <- as.table(rbind(estudiantes, nacional))
dimnames(tabla3) <- list(poblacion = c("Estudiante", "Nacional"),
aprobacion = c("Aprueba", "Desaprueba", "Ninguna"))
print(tabla3)
# Se verifican si hay más de 5 observaciones en cada grupo
n_nacional <- sum(nacional)
n_estudiantes <- sum(estudiantes)
proporciones <- round(nacional/n_nacional, 3)
esperados <- round(proporciones*n_estudiantes, 3)
print(esperados)
prueba3 <- chisq.test(tabla3, correct = FALSE)
print(prueba3)
View(prueba)
View(prueba2)
View(prueba2)
View(prueba3)
View(datos)
dir <- "C:/Users/Dell PC/Desktop/IME-2022/Actividades/act7"
basename <- "EP07 Datos.csv"
file <- file.path(dir, basename)
población <- read.csv2(file = file, fileEncoding = "UTF-8")
View(población)
View(datos)
View(población)
alfa = 0.05
# Hacer prueba Q de Cochran .
prueba <- cochran.qtest ( data = población , alpha = alfa)
print ( prueba )
library ( RVAideMemoire )
alfa = 0.05
# Hacer prueba Q de Cochran .
prueba <- cochran.qtest ( data = población , alpha = alfa)
print ( prueba )
View(población)
alfa = 0.05
# Hacer prueba Q de Cochran .
prueba4 <- cochran.qtest ( resultado ~ metaheuristica | instancia,data = población , alpha = alfa)
print (prueba4)
instancias <- poblacion[["Id"]]
instancias <- población[["Id"]]
instancias
View(población)
población <- población %>% pivot_longer(c( "Calculo ", " Algebra ", " Fisica "),
names_to = " metaheuristica ",
values_to = " resultado ")
library ( tidyverse )
población <- población %>% pivot_longer(c( "Calculo ", " Algebra ", " Fisica "),
names_to = " metaheuristica ",
values_to = " resultado ")
población <- población %>% pivot_longer(c( "Calculo", "Algebra", "Fisica"),
names_to = " metaheuristica ",
values_to = " resultado ")
View(datos)
View(población)
población <- población %>% pivot_longer(c( "Calculo", "Algebra", "Fisica"),
names_to = " cursos ",
values_to = " resultado ")
alfa = 0.05
instancias <- población[["Id"]]
# Hacer prueba Q de Cochran .
prueba4 <- cochran.qtest ( resultado ~ cursos | instancia,data = población , alpha = alfa)
print (prueba4)
población <- población %>% pivot_longer(c( "Calculo", "Algebra", "Fisica"),
names_to = "cursos",
values_to = "resultado")
alfa = 0.05
instancias <- población[["Id"]]
# Hacer prueba Q de Cochran .
prueba4 <- cochran.qtest ( resultado ~ cursos | instancia,data = población , alpha = alfa)
print (prueba4)
población <- población %>% pivot_longer(c( "Calculo", "Algebra", "Fisica"),
names_to = "cursos",
values_to = "resultado")
library ( tidyverse )
library ( RVAideMemoire )
# Llevar matriz de datos a formato largo .
población <- población %>% pivot_longer(c( "Calculo", "Algebra", "Fisica"),
names_to = "cursos",
values_to = "resultado")
alfa = 0.05
instancias <- población[["Id"]]
dir <- "C:/Users/Dell PC/Desktop/IME-2022/Actividades/act7"
basename <- "EP07 Datos.csv"
file <- file.path(dir, basename)
población <- read.csv2(file = file, fileEncoding = "UTF-8")
library ( tidyverse )
library ( RVAideMemoire )
# Llevar matriz de datos a formato largo .
población <- población %>% pivot_longer(c( "Calculo", "Algebra", "Fisica"),
names_to = "cursos",
values_to = "resultado")
alfa = 0.05
instancias <- población[["Id"]]
prueba4 <- cochran.qtest ( resultado ~ cursos | instancia,data = población , alpha = alfa)
print (prueba4)
View(población)
instancia <- población[["Id"]]
# Hacer prueba Q de Cochran .
prueba4 <- cochran.qtest ( resultado ~ cursos | instancia,data = población , alpha = alfa)
print (prueba4)
población <- población %>% rename(c( "Calculo", "Algebra", "Fisica"),
names_to = "cursos",
values_to = "resultado")
población <- población %>% pivot_longer(c( "Calculo", "Algebra", "Fisica"),
names_to = "cursos",
values_to = "resultado")
alfa = 0.05
instancia <- factor(población[["Id"]])
instancia
View(población)
instancia <- población[["Id"]]
población[["Id"]] <- factor(población[["Id"]])
población[["cursos"]] <- factor(población[["cursos"]])
View(población)
instancia <- población[["Id"]]
población[["Id"]] <- factor(población[["Id"]])
población[["cursos"]] <- factor(población[["cursos"]])
id <- población[["Id"]]
id
View(población)
id <- población[["Id"]]
población[["Id"]] <- factor(población[["Id"]])
población[["cursos"]] <- factor(población[["cursos"]])
# Hacer prueba Q de Cochran .
prueba4 <- cochran.qtest ( resultado ~ cursos | id, data = población , alpha = alfa)
print (prueba4)
# Llevar matriz de datos a formato largo .
poblacion <- poblacion %>% pivot_longer(c( "Calculo", "Algebra", "Fisica"),
names_to = "cursos",
values_to = "resultado")
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act7/EP07-respuesta-equipo-2.R", encoding = 'UTF-8')
set.seed(440)
alfa = 0.05
# Lectura de archivo
dir <- "C:/Users/Dell PC/Desktop/IME-2022/Actividades/act7"
basename <- "EP07 Datos.csv"
file <- file.path(dir, basename)
población <- read.csv2(file = file, fileEncoding = "UTF-8")
library ( tidyverse )
library ( RVAideMemoire )
poblacion <- poblacion %>% pivot_longer(c( "Calculo", "Algebra", "Fisica"),
names_to = "cursos",
values_to = "resultado")
id <- población[["Id"]]
población[["Id"]] <- factor(población[["Id"]])
población[["cursos"]] <- factor(población[["cursos"]])
# Hacer prueba Q de Cochran .
prueba4 <- cochran.qtest ( resultado ~ cursos | id, data = poblacion , alpha = alfa)
print (prueba4)
set.seed(440)
alfa = 0.05
# Lectura de archivo
dir <- "C:/Users/Dell PC/Desktop/IME-2022/Actividades/act7"
basename <- "EP07 Datos.csv"
file <- file.path(dir, basename)
población <- read.csv2(file = file, fileEncoding = "UTF-8")
library ( tidyverse )
library ( RVAideMemoire )
# Llevar matriz de datos a formato largo .
poblacion <- poblacion %>% pivot_longer(c( "Calculo", "Algebra", "Fisica"),
names_to = "cursos",
values_to = "resultado")
id <- poblacion[["Id"]]
poblacion[["Id"]] <- factor(poblacion[["Id"]])
poblacion[["cursos"]] <- factor(poblacion[["cursos"]])
# Hacer prueba Q de Cochran .
prueba4 <- cochran.qtest ( resultado ~ cursos | id, data = poblacion , alpha = alfa)
print (prueba4)
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act7/EP07-respuesta-equipo-2.R", encoding = 'UTF-8')
library ( rcompanion )
post_hoc <- pairwiseMcnemar( resultado ~ cursos | id ,
data = poblacion , method = " holm ")
cat("\nProcedimiento post-hoc con corrección de Holm \n")
print( post_hoc)
post_hoc <- pairwiseMcnemar( resultado ~ cursos | id ,
data = poblacion , method = " holm ")
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act7/EP07-respuesta-equipo-2.R", encoding = 'UTF-8')
length(id)
post_hoc <- pairwiseMcnemar( resultado ~ cursos | Id ,
data = poblacion , method = " holm ")
post_hoc <- pairwiseMcnemar( resultado ~ cursos | Id ,
data = poblacion , method = "holm")
print( post_hoc)
prueba4 <- cochran.qtest ( resultado ~ cursos | Id, data = poblacion , alpha = alfa)
print (prueba4)
prueba4 <- cochran.qtest ( resultado ~ cursos | Id, data = poblacion , alpha = alfa)
print (prueba4)
prueba4 <- cochran.qtest ( resultado ~ cursos | Id, data = poblacion , alpha = alfa)
print (prueba4)
post_hoc <- pairwiseMcnemar( resultado ~ cursos | Id ,
data = poblacion , method = "holm")
cat("\nProcedimiento post-hoc con corrección de Holm \n")
print( post_hoc)
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act7/EP07-respuesta-equipo-2.R", encoding = 'UTF-8')
