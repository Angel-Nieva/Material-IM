SE <- sigma / sqrt (n)
# Graficar la distribución muestral del volumen medio de los bidones si
# la hipótesis nula fuera verdadera.
x <- seq (9 , 11 , 0.01)
y <- dnorm (x, mean = media_nula , sd = SE)
g <- ggplot ( data = data.frame (x, y), aes(x))
g <- g + stat_function (
fun = dnorm ,
args = list ( mean = media_nula , sd = SE),
colour = "red ", size = 1)
g <- g + ylab ("")
g <- g + scale_y_continuous ( breaks = NULL )
g <- g + scale_x_continuous ( name = " Volumen medio de los bidones [L]",
breaks = seq (9, 11, 0.1))
g <- g + ggtitle("Distribución del volumen medio de los bidones")
g <- g + geom_vline ( xintercept = media_nula , linetype = "dashed")
g <- g + theme_pubr ()
# Se colorea el área del grafico de la región de rechazo de la hipótesis nula.
q_critico_superior <- 10.3
g <- g + geom_area ( data = subset (data.frame(x,y) , x > q_critico_superior ),
aes (y = y),
colour = "red ",
fill = "red")
print (g)
# Usando la función de pnorm, se entrega la probabilidad de que la variable
# tome valores menores o iguales que un valor dado.
# Si lower.tail = FALSE, pnorm opera con la cola superior, es decir,
# entrega la probabilidad de que la variable tome valores mayores
# a un valor dado.
alfa <- pnorm (q_critico_superior,mean = media_nula,sd = SE,lower.tail = FALSE )
cat (" Alfa = ", alfa , "\n")
# alfa = 0.001349898
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
cat("q crítico superior = ", q_critico_superior, "\n")
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
media_nula
Z_critico
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
Z_critico
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
Z_critico
Z_critico*2
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
Z_critico
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
Z_critico
Z_critico <- qnorm ( alfa/2 , mean = media_nula , sd = 1, lower.tail = FALSE)
Z_critico
q_critico_superior <- media_nula - Z_critico*SE
cat("q crítico superior = ", q_critico_superior, "\n")
Z_critico <- qnorm ( alfa/2 , mean = 0 , sd = 1, lower.tail = FALSE)
Z_critico
Z_critico <- qnorm ( alfa/2 , mean = 0 , sd = 1, lower.tail = TRUE)
Z_critico
Z_critico <- qnorm ( alfa/2 , mean = 0 , sd = 1, lower.tail = FALSE)
Z_critico <- qnorm ( alfa , mean = 0 , sd = 1, lower.tail = FALSE)
q_critico_superior <- media_nula - Z_critico*SE
cat("q crítico superior = ", q_critico_superior, "\n")
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
Z_critico <- qnorm ( alfa/2 , mean = 0 , sd = 1, lower.tail = FALSE)
q_critico_inferior <- media_nula - Z_critico*SE
q_critico_superior <- media_nula + Z_critico*SE
cat("q crítico superior = ", q_critico_superior, "\n")
Z_critico <- qnorm ( alfa/2 , mean = 0 , sd = 1, lower.tail = FALSE)
q_critico_inferior <- media_nula - Z_critico*SE
q_critico_superior <- media_nula + Z_critico*SE
cat("q crítico superior = ", q_critico_superior, "\n")
cat("q crítico inferior = ", q_critico_inferior, "\n")
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
library(ggpubr)
library(pwr)
# Fijar valores conocidos
sigma <- 10
n <- 25
# Calcular el error est?ndar
SE <- sigma/sqrt(n)
media_nula <- 170
# Graficar la distribuci?n muestral de la dureza media de las barras si
# la hip?tesis nula fuera verdadera
x <- seq(160, 180, 0.01 )
y <- dnorm(x, mean = media_nula, sd = SE)
g <- ggplot(data = data.frame(x,y), aes(x))
g <- g + stat_function(fun = dnorm,
args = list(mean = media_nula, sd = SE),
colour = "red", size = 1)
g <- g + ylab(" ")
g <- g + scale_y_continuous(breaks =  NULL)
g <- g + scale_x_continuous(name = "Dureza media de las barras [kgf mm^-2]", breaks = seq(160,180,2))
g <- g + ggtitle("Distribuci?n de la dureza media de las barras")
g <- g + geom_vline ( xintercept = media_nula , linetype = "dashed")
g <- g + theme_pubr()
# Se colorea el ?rea del gr?fico correspondiente a la regi?n de rechazo de la hip?tesis nula
g <- g + geom_area ( data = subset (data.frame(x,y), x < 167) ,
aes ( y = y ) ,
colour = "red",
fill = "red",
alpha = 0.5)
g <- g + geom_area ( data = subset (data.frame(x,y) , x > 173 ) ,
aes ( y = y ) ,
colour = "red",
fill = "red",
alpha = 0.5)
print(g)
# pnorm entrega la probabilidad de que la variable tome valores menores
# o iguales que un valor dado.
# Si lower.tail = FALSE, pnorm opera con la cola superior, es decir,
# entrega la probabilidad de que la variable tome valores mayores
# a un valor dado
alfa <- pnorm (167,mean = media_nula,sd = SE,lower.tail = TRUE ) +
pnorm (173,mean = media_nula ,sd = SE,lower.tail = FALSE )
cat (" Alfa = ", alfa , "\n")
# Para comprobar si el alfa obtenido anteriormente est? bien calculado, se realiza el proceso
# inverso para as? obtener los q cr?ticos, es decir, 167 y 173, los cuales resultan ser as?.
media_nula <- 170
sigma <- 10
n <- 25
SE <- sigma/sqrt(n)
alfa <- 0.133614402537716
Z_critico <- qnorm ( alfa/2 , mean = 0 , sd = 1, lower.tail = FALSE)
q_critico_inferior <- media_nula - Z_critico*SE
q_critico_superior <- media_nula + Z_critico*SE
cat("q cr?tico inferior = ", q_critico_inferior, "\n")
cat("q cr?tico superior = ", q_critico_superior, "\n")
Z_critico
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
# Se sabe que el proceso de fabricaci?n de barras de acero para concreto reforzado producen barras con
# medidas de dureza que siguen una distribuci?n normal con desviaci?n est?ndar de 10 kilogramos de
# fuerza por mil?metro cuadrado. Usando una muestra aleatoria de tama?o 25, un ingeniero quiere averiguar
# si una l?nea de producci?n est? generando barras con dureza media de 170 [kgf mm^-2].
# Observaci?n: dado que es una muestra aleatoria a la cual se le conoce la desviaci?n est?ndar
# y sigue una distribuci?n normal, es posible aplicar la prueba t de Student para una muestra.
# Formulaci?n de hip?tesis:
# H0: La dureza media de las barras es de  exactamente 170 [kgf mm^-2].
# HA: La dureza media de las barras es distinta de 170 [kgf mm^-2].
# En este caso, el valor nulo es ??0 = 170 [kgf mm^-2]. Matem?ticamente,
# las hip?tesis anteriores se pueden formular como:
# H0: ?? = ??0, esto es ?? = 170
# HA: ?? ??? ??0, esto es ?? ??? 170
# *********************************** PREGUNTA 1 ***********************************
#Si el ingeniero piensa rechazar la hip?tesis nula cuando la muestra presente una media menor a
#167 [kgf mm^-2] o mayor a 173 [kgf mm^-2], ?cu?l es la probabilidad de que cometa un error de tipo 1?
# Se pide determinar el valor de alfa, ya que ?ste corresponde a la probabilidad de cometer
# un error de tipo I.
#El ?rea roja del gr?fico corresponde a la regi?n de rechazo si la hip?tesis nula fuera verdadera
library(ggpubr)
library(pwr)
# Fijar valores conocidos
sigma <- 10
n <- 25
# Calcular el error est?ndar
SE <- sigma/sqrt(n)
media_nula <- 170
# Graficar la distribuci?n muestral de la dureza media de las barras si
# la hip?tesis nula fuera verdadera
x <- seq(160, 180, 0.01 )
y <- dnorm(x, mean = media_nula, sd = SE)
g <- ggplot(data = data.frame(x,y), aes(x))
g <- g + stat_function(fun = dnorm,
args = list(mean = media_nula, sd = SE),
colour = "red", size = 1)
g <- g + ylab(" ")
g <- g + scale_y_continuous(breaks =  NULL)
g <- g + scale_x_continuous(name = "Dureza media de las barras [kgf mm^-2]", breaks = seq(160,180,2))
g <- g + ggtitle("Distribuci?n de la dureza media de las barras")
g <- g + geom_vline ( xintercept = media_nula , linetype = "dashed")
g <- g + theme_pubr()
# Se colorea el ?rea del gr?fico correspondiente a la regi?n de rechazo de la hip?tesis nula
g <- g + geom_area ( data = subset (data.frame(x,y), x < 167) ,
aes ( y = y ) ,
colour = "red",
fill = "red",
alpha = 0.5)
g <- g + geom_area ( data = subset (data.frame(x,y) , x > 173 ) ,
aes ( y = y ) ,
colour = "red",
fill = "red",
alpha = 0.5)
print(g)
# pnorm entrega la probabilidad de que la variable tome valores menores
# o iguales que un valor dado.
# Si lower.tail = FALSE, pnorm opera con la cola superior, es decir,
# entrega la probabilidad de que la variable tome valores mayores
# a un valor dado
alfa <- pnorm (167,mean = media_nula,sd = SE,lower.tail = TRUE ) +
pnorm (173,mean = media_nula ,sd = SE,lower.tail = FALSE )
cat (" Alfa = ", alfa , "\n")
# Para comprobar si el alfa obtenido anteriormente est? bien calculado, se realiza el proceso
# inverso para as? obtener los q cr?ticos, es decir, 167 y 173, los cuales resultan ser as?.
media_nula <- 170
sigma <- 10
n <- 25
SE <- sigma/sqrt(n)
alfa <- 0.133614402537716
Z_critico <- qnorm ( alfa/2 , mean = 0 , sd = 1, lower.tail = FALSE)
q_critico_inferior <- media_nula - Z_critico*SE
q_critico_superior <- media_nula + Z_critico*SE
cat("q cr?tico inferior = ", q_critico_inferior, "\n")
cat("q cr?tico superior = ", q_critico_superior, "\n")
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
Z_critico
Z_critico
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
diferencia = 10.3 - media_nula
# diferencia = 0.3
# Cálculo del tamaño de la muestra usando la función power.t.test.
poder_muestra <- power.t.test(n = NULL,
delta = diferencia,
sd = sigma,
sig.level = 0.05,
power = 0.75,
type = "one.sample",
alternative = "greater")
print(poder_muestra)
n <- ceiling(poder_muestra [["n"]])
cat("n = ", n, "\n")
library(pwr)
diferencia = 10.3 - media_nula
# diferencia = 0.3
# Cálculo del tamaño de la muestra usando la función power.t.test.
poder_muestra <- power.t.test(n = NULL,
delta = diferencia,
sd = sigma,
sig.level = 0.05,
power = 0.75,
type = "one.sample",
alternative = "greater")
print(poder_muestra)
n <- ceiling(poder_muestra [["n"]])
cat("n = ", n, "\n")
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
print(poder_muestra)
diferencia
poder_muestra <- power.t.test(n = NULL,
delta = diferencia,
sd = sigma,
sig.level = 0.05,
power = 0.75,
type = "one.sample",
alternative = "two.sided")
print(poder_muestra)
n <- ceiling(poder_muestra [["n"]])
cat("n = ", n, "\n")
poder_muestra <- power.t.test(n = NULL,
delta = diferencia,
sd = sigma,
sig.level = 0.05,
power = 0.75,
type = "one.sample",
alternative = "greater")
print(poder_muestra)
n <- ceiling(poder_muestra [["n"]])
cat("n = ", n, "\n")
print(poder_muestra)
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
media_nula
poder_muestra <- power.t.test(n = NULL,
delta = diferencia,
sd = sigma,
sig.level = 0.05,
power = 0.8,
type = "one.sample",
alternative = "one.sided")# En el texto sale geater o less...
print(poder_muestra)
poder_muestra <- power.t.test(n = NULL,
delta = diferencia,
sd = sigma,
sig.level = 0.05,
power = 0.75,
type = "one.sample",
alternative = "one.sided")# En el texto sale geater o less...
print(poder_muestra)
n <- ceiling(poder_muestra [["n"]])
cat("n = ", n, "\n")
poder_muestra <- power.t.test(n = NULL,
delta = diferencia,
sd = sigma,
sig.level = 0.01,
power = 0.75,
type = "one.sample",
alternative = "one.sided")
print(poder_muestra)
n <- ceiling(poder_muestra [["n"]])
cat("n = ", n, "\n")
# Cálculo del tamaño de la muestra usando la función power.t.test.
poder_muestra <- power.t.test(n = NULL,
delta = diferencia,
sd = sigma,
sig.level = 0.01,
power = 0.75,
type = "one.sample",
alternative = "one.sided")
print(poder_muestra)
n <- ceiling(poder_muestra [["n"]])
cat("n = ", n, "\n")
# Se deben revisar un total de 103 bidones para conseguir un poder estadístico de 0.75 y
# nivel de significación 0.01. Esto significa que se necesitan 103 bidones para cometer
# un error de tipo I el 1% de las veces y un error de tipo II el 25% de las veces.
# Como se puede observar, a menor valor de alfa, disminuir error tipo I, se necesita un
# tamaño de muestra mayor para mantener el poder de 0.75.
# Se crea un grafico para representar la relación entre el poder y el tamaño de efecto
# de la muestra con un nivel de significación de 0.05 y 0.01, dejando constante
# un poder de 0.75.
n1 = 62
n2 = 103
# poder = 0.75
# efecto <- (medias - media_nula)
# efecto = 0.3
# sigma = 1
# Generar un vector con un rango de valores para el tama?o de las muestras
n <- seq(5, 150, 0.1)
alfa_05 <- power.t.test(n = n, delta=efecto, sd = sigma, sig.level = 0.05,
type="one.sample", alternative = "one.sided")$power
alfa_01 <- power.t.test(n = n, delta=efecto, sd = sigma, sig.level = 0.01,
type="one.sample", alternative = "one.sided")$power
datos <- data.frame(n, alfa_05, alfa_01)
# Llevar a formato largo
datos <- datos %>% pivot_longer(!n, names_to="nombre_alfa", values_to="valor_alfa")
niveles <- c("alfa_05", "alfa_01")
etiquetas <- c("alfa = 0.05", "alfa = 0.01")
datos[["nombre_alfa"]] <- factor(datos[["nombre_alfa"]], levels = niveles, labels = etiquetas)
g <- ggplot(datos, aes(n, valor_alfa, colour = factor(nombre_alfa)))
g <- g + geom_line()
g <- g + labs(colour = " ")
g <- g + ylab("Poder estad?stico")
g <- g + xlab("Tamaño de la muestra")
g <- g + scale_color_manual(values=c("red", "blue"))
g <- g + scale_y_continuous(breaks = seq(0,1,0.1))
g <- g + scale_x_continuous(breaks = seq(0,150,50))
g <- g + geom_vline ( xintercept = tam1 , linetype = "dashed")
g <- g + geom_vline ( xintercept = tam2 , linetype = "dashed")
g <- g + geom_hline ( aes ( yintercept = poder ) ,
color = "red", linetype = 2)
g <- g + theme_pubr()
g <- g + ggtitle("Relación entre el poder y el tamaño de la muestra")
print(g)
poder_muestra <- power.t.test(n = NULL,
delta = diferencia,
sd = sigma,
sig.level = 0.01,
power = 0.75,
type = "one.sample",
alternative = "one.sided")
print(poder_muestra)
n <- ceiling(poder_muestra [["n"]])
cat("n = ", n, "\n")
n <- seq(5, 150, 0.1)
alfa_05 <- power.t.test(n = n, delta=efecto, sd = sigma, sig.level = 0.05,
type="one.sample", alternative = "one.sided")$power
alfa_01 <- power.t.test(n = n, delta=efecto, sd = sigma, sig.level = 0.01,
type="one.sample", alternative = "one.sided")$power
datos <- data.frame(n, alfa_05, alfa_01)
alfa_05 <- power.t.test(n = n, delta=efecto, sd = sigma, sig.level = 0.05,
type="one.sample", alternative = "one.sided")$power
efecto
n <- seq(5, 150, 0.1)
alfa_05 <- power.t.test(n = n, delta=efecto, sd = sigma, sig.level = 0.05,
type="one.sample", alternative = "one.sided")$power
alfa_01 <- power.t.test(n = n, delta=efecto, sd = sigma, sig.level = 0.01,
type="one.sample", alternative = "one.sided")$power
datos <- data.frame(n, alfa_05, alfa_01)
efecto
efecto <- diferencia
efecto
alfa_05 <- power.t.test(n = n, delta=efecto, sd = sigma, sig.level = 0.05,
type="one.sample", alternative = "one.sided")$power
alfa_01 <- power.t.test(n = n, delta=efecto, sd = sigma, sig.level = 0.01,
type="one.sample", alternative = "one.sided")$power
datos <- data.frame(n, alfa_05, alfa_01)
datos <- datos %>% pivot_longer(!n, names_to="nombre_alfa", values_to="valor_alfa")
niveles <- c("alfa_05", "alfa_01")
etiquetas <- c("alfa = 0.05", "alfa = 0.01")
library(tidyverse)
datos <- data.frame(n, alfa_05, alfa_01)
datos <- datos %>% pivot_longer(!n, names_to="nombre_alfa", values_to="valor_alfa")
niveles <- c("alfa_05", "alfa_01")
etiquetas <- c("alfa = 0.05", "alfa = 0.01")
datos[["nombre_alfa"]] <- factor(datos[["nombre_alfa"]], levels = niveles, labels = etiquetas)
g <- ggplot(datos, aes(n, valor_alfa, colour = factor(nombre_alfa)))
g <- g + geom_line()
g <- g + labs(colour = " ")
g <- g + ylab("Poder estadístico")
g <- g + xlab("Tamaño de la muestra")
g <- g + scale_color_manual(values=c("red", "blue"))
g <- g + scale_y_continuous(breaks = seq(0,1,0.1))
g <- g + scale_x_continuous(breaks = seq(0,150,50))
g <- g + geom_vline ( xintercept = tam1 , linetype = "dashed")
g <- g + geom_vline ( xintercept = tam2 , linetype = "dashed")
g <- g + geom_hline ( aes ( yintercept = poder ) ,
color = "red", linetype = 2)
g <- g + theme_pubr()
g <- g + ggtitle("Relación entre el poder y el tamaño de la muestra")
g <- g + scale_color_manual(values=c("red", "blue"))
g <- g + scale_y_continuous(breaks = seq(0,1,0.1))
g <- g + scale_x_continuous(breaks = seq(0,150,50))
g <- g + geom_vline ( xintercept = n1 , linetype = "dashed")
g <- g + geom_vline ( xintercept = n2 , linetype = "dashed")
g <- g + geom_hline ( aes ( yintercept = poder ) ,
color = "red", linetype = 2)
g <- g + theme_pubr()
g <- g + scale_color_manual(values=c("red", "blue"))
g <- g + scale_y_continuous(breaks = seq(0,1,0.1))
g <- g + geom_vline ( xintercept = n1 , linetype = "dashed")
g <- g + geom_vline ( xintercept = n2 , linetype = "dashed")
g <- g + geom_hline ( aes ( yintercept = poder ) ,
color = "red", linetype = 2)
g <- g + theme_pubr()
g <- g + scale_color_manual(values=c("red", "blue"))
g <- g + geom_vline ( xintercept = n1 , linetype = "dashed")
g <- g + geom_vline ( xintercept = n2 , linetype = "dashed")
g <- g + geom_hline ( aes ( yintercept = poder ) ,
color = "red", linetype = 2)
g <- g + theme_pubr()
g <- ggplot(datos, aes(n, valor_alfa, colour = factor(nombre_alfa)))
g <- g + geom_line()
g <- g + labs(colour = " ")
g <- g + ylab("Poder estadístico")
g <- g + xlab("Tamaño de la muestra")
g <- g + scale_color_manual(values=c("red", "blue"))
g <- g + geom_hline ( aes ( yintercept = poder ) ,
color = "red", linetype = 2)
g <- g + theme_pubr()
g <- g + ggtitle("Relación entre el poder y el tamaño de la muestra")
g <- g + geom_vline ( xintercept = n1 , linetype = "dashed")
g <- g + geom_vline ( xintercept = n2 , linetype = "dashed")
print(g)
g <- ggplot(datos, aes(n, valor_alfa, colour = factor(nombre_alfa)))
g <- g + geom_line()
g <- g + labs(colour = " ")
g <- g + ylab("Poder estadístico")
g <- g + xlab("Tamaño de la muestra")
g <- g + scale_color_manual(values=c("red", "blue"))
g <- g + geom_hline ( aes ( yintercept = poder ) ,
color = "red", linetype = 2)
g <- g + theme_pubr()
g <- g + ggtitle("Relación entre el poder y el tamaño de la muestra")
g <- g + geom_vline ( xintercept = n1 , linetype = "dashed")
g <- g + geom_vline ( xintercept = n2 , linetype = "dashed")
print(g)
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
library(ggpubr)
library(tidyverse)
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
rlang::last_error()
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-sala-1.R")
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-sala-1.R")
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
poder
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
pnorm(Z_critico)
z
Z_critico
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-sala-1.R")
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act5/EP05-respuesta-equipo-2.R", encoding = 'UTF-8')
especialidad <- c("Pediatria", "Obstetricia")
mujeres <- c(54, 72)
tabla <- data.frame(especialidad, mujeres)
View(tabla)
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act6/EP06-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act6/EP06-respuesta-equipo-2.R", encoding = 'UTF-8')
View(tabla)
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act6/EP06-respuesta-equipo-2.R", encoding = 'UTF-8')
View(tabla)
t
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act6/EP06-respuesta-equipo-2.R", encoding = 'UTF-8')
t
View(tabla)
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act6/EP06-respuesta-equipo-2.R", encoding = 'UTF-8')
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act6/EP06-respuesta-equipo-2.R", encoding = 'UTF-8')
print(t)
source("C:/Users/Dell PC/Desktop/IME-2022/Actividades/act6/EP06-respuesta-equipo-2.R", encoding = 'UTF-8')
View(tabla)
n = 137
p_exito = 71/137
alfa = 0.05
valor_nulo = 0.59
